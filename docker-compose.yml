version: '3'

services:
  nodejs:
    cpus: 4
    mem_limit: 2GB
    pids_limit: 32768
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=$NODE_ENV
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "80:8080"
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    networks:
      - app-network
    depends_on:
      - db
    command: npm run start

  db:
    cpus: 4
    mem_limit: 2GB
    pids_limit: 32768
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

  elasticsearch:
    cpus: 4
    mem_limit: 2GB
    pids_limit: 32768
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
    networks:
      - app-network

  kibana:
    cpus: 4
    mem_limit: 2GB
    pids_limit: 32768
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
    environment:
      - xpack.security.enabled=false
      - es.tags-as-fields.all=true
    networks:
      - app-network
    restart: on-failure

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules: